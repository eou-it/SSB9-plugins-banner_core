buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://dl.bintray.com/goodstartgenetics/grails3-plugins/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.6"
        classpath "net.saliman:gradle-cobertura-plugin:2.6.0"
    }
}

version "9.31"
group "banner.core"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin: 'net.saliman.cobertura'

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://dl.bintray.com/goodstartgenetics/grails3-plugins/" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.6"
    
	//testCompile "org.grails:grails-gorm-testing-support"
    //testCompile "org.grails:grails-plugin-testing"
    //testCompile "org.grails:grails-web-testing-support"
	
	compile "org.grails:grails-gorm-testing-support"
    compile "org.grails:grails-plugin-testing"
    compile "org.grails:grails-web-testing-support"

    // Added for BannerXE for Grails-3
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.5.Final"
    testCompile "org.grails.plugins:hibernate-filter-plugin:0.5.4"
    compile "org.grails.plugins:spring-security-core:3.2.3"
    compile "commons-dbcp:commons-dbcp:1.4"
    compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.2"
    compile "junit:junit:4.12"
    compile "commons-codec:commons-codec:1.10"
    compile "org.codehaus.groovy:groovy-ant:2.4.13"
    //compile "org.codenarc:CodeNarc:0.17"
    compile 'org.grails.plugins:grails-markdown:3.0.0'
    // Added for BannerXE - Oracle jars - specified as physical path
    compile files("lib/ojdbc6-11.2.0.1.0.jar")
    runtime files("lib/xdb6-11.2.0.4.jar")
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false


assets {
    packagePlugin = true
}

/*assemble.doLast {

    //def packageDir = "build/libs/packaging/"+"${rootProject.name}"+version
    def packageDir = "../../build/libs/packaging/${rootProject.name}${rootProject.version}"
    def targetDir = "../../target"
    ant.mkdir( dir: packageDir)
    ant.mkdir( dir: targetDir)
    println "packageDir >>>>>>>${packageDir}"
    def warName = "${rootProject.name}-${rootProject.version}.war"
    println ".....Unzipping ... build/libs/${rootProject.name}-${rootProject.version}.war"
    ant.unzip(src: "../../build/libs/${warName}", dest: packageDir, overwrite: "true")

    println "......Moving >>>>> ${packageDir}WEB-INF/lib/ojdbc6-11.2.0.1.0.jar  to ${targetDir}"

    ant.move (file: packageDir+"/WEB-INF/lib/ojdbc6-11.2.0.1.0.jar", toDir: targetDir )
    println "......Moving >>>>> ${packageDir}WEB-INF/lib/xdb6-11.2.0.4.jar  to ${targetDir}"

    ant.move (file: packageDir+"/WEB-INF/lib/xdb6-11.2.0.4.jar", toDir: targetDir )
    //ant.delete(directory:packageDir+"/assets/", excl  )
    ant.zip(destfile: targetDir+"/${rootProject.name}-${rootProject.version}.war", basedir: packageDir)
    ant.delete(file: "../../build/libs/${warName}")
    println "War created! - Copy the war from the target directory folder."
    ant.delete( dir: packageDir )
}*/

// TODO :grails_332_change, needs to revisit
// Added for BannerXE - Internal plugin dependency
grails {
    plugins {
        compile project(":banner-codenarc")
        compile project(":i18n-core")
        compile project(":grails-constraints")
    }
}

/*tasks.withType(CodeNarc) {
    def allGroovySourceDirs = subprojects.collect { Project p -> p.sourceSets.main.allGroovy.getSrcDirs() }.flatten()

    //println allGroovySourceDirs
    //println "-----------------" + codenarcClasspath
    codenarcClasspath = codenarcClasspath + files("${rootProject.projectDir}/out/banner_codenarc.git-9.26.2.jar")
    println "-----------------" + codenarcClasspath
    allGroovySourceDirs.each {
        println "-----------------" + it
        source(it)
    }
}

task codeNarcConsole(type: CodeNarc) {
    // other config
    reportFormat = 'console'
}
check.dependsOn('codeNarcConsole')
*/