/** *****************************************************************************
 Â© 2011 SunGard Higher Education.  All Rights Reserved.

 CONFIDENTIAL BUSINESS INFORMATION

 THIS PROGRAM IS PROPRIETARY INFORMATION OF SUNGARD HIGHER EDUCATION
 AND IS NOT TO BE COPIED, REPRODUCED, LENT, OR DISPOSED OF,
 NOR USED FOR ANY PURPOSE OTHER THAN THAT WHICH IT IS SPECIFICALLY PROVIDED
 WITHOUT THE WRITTEN PERMISSION OF THE SAID COMPANY
 ****************************************************************************** */
includeTargets << grailsScript( "Init" )
includeTargets << grailsScript( "Bootstrap" )


target( set_release_info: "Assigns a build number to the project." ) {
    depends( compile, createConfig )
    
    // This target uses a 'build number' web service to retrieve the next build number 
    // for the project.  Each project is assigned a UUID (manually), and this UUID is 
    // supplied to the web service to identify which 'build number sequence' to increment 
    // and return. The project's UUID, and the URL to the service, are 
    // found in the project's configuration. 
    // 
    def releaseInfo = new File( "$basedir/release_info.groovy" )
    if (releaseInfo.exists()) {
        println "**** WARNING: This build has already been assigned a build number! ****"
        println "              (the existing 'release_info.groovy' file will be renamed 'release_info.groovy.old')"
        releaseInfo.renameTo( "$basedir/release_info.groovy.old" )
        releaseInfo = new File( "$basedir/release_info.groovy" ) // and switch our pointer back to the desired file name
    } 
    
    
    def appVersion = "${metadata.'app.version'}"
    
    def uuid = config.build.number.uuid
    def url = config.build.number.base.url + uuid 
    
    def buildNumberProperty = fetchBuildNumber()
    def extractedBuildNumber = (buildNumberProperty =~ /[\d]+/).collect { it }[0]
    
    def content = """//This file is automatically generated and contains release specific properties.  
                     |//This file MUST not be changed. 
                     |//
                     |//  ****** DO NOT EDIT OR TRANSLATE THIS FILE. ******* 
                     |//
                     |/* ****************************************************
                     | *             Version and Build Number               *
                     | **************************************************** */
                     |
                     |// The following application.build.version property should be used 
                     |// to refer to this particular build. 
                     |//
                     |application.build.version='$appVersion.$extractedBuildNumber'
                     |
                     |application.build.time='${new Date()}'
                     |
                     |// The project-specific URL used to assign the build numbers:
                     |build.number.url='$url'
                     |
                     |
                     |
                     |
                     |/* ****************************************************
                     | *                   SCM Revision                     *
                     | **************************************************** */
                     |// SCM Revision
                     |// TODO: populate SVN revision
                     |
                     |
                     |
                     |""".stripMargin()
    
    releaseInfo.write content  
}


setDefaultTarget( set_release_info ) 


// ----------------------------- Supporting Methods -----------------------------
// (These methods are not exposed as targets, as they should never be executed stand-alone.)


private String fetchBuildNumber() {
    def uuid = config.build.number.uuid
    def url = config.build.number.base.url + uuid
    url.toURL().text
}

